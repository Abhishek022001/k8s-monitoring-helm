cluster:
  name: custom-config-test
externalServices:
  prometheus:
    host: https://prometheus.example.com
    basicAuth:
      username: 12345
      password: It's a secret to everyone
    externalLabels:
      region: southwest
      tenant: widgetco
  loki:
    host: https://loki.example.com
    basicAuth:
      username: 12345
      password: It's a secret to everyone
    externalLabels:
      region: southwest
      tenant: widgetco
extraConfig: "discovery.relabel \"animal_service\" {\n  targets = discovery.kubernetes.services.targets\n\
  \  rule {\n    source_labels = [\"__meta_kubernetes_service_label_app\"]\n    regex\
  \ = \"animal-service\"\n    action = \"keep\"\n  }\n  rule {\n    source_labels\
  \ = [\"__meta_kubernetes_service_name\"]\n    regex = \"animal-service-metrics\"\
  \n    action = \"keep\"\n  }\n}\n\nprometheus.scrape \"animal_service\" {\n  job_name\
  \   = \"animal_service\"\n  targets    = discovery.relabel.animal_service.output\n\
  \  forward_to = [prometheus.remote_write.grafana_cloud_prometheus.receiver]\n}"
logs:
  extraConfig: "discovery.relabel \"postgres_logs\" {\n  targets = discovery.relabel.pod_logs.output\n\
    \  \n  rule {\n    source_labels = [\"namespace\"]\n    regex = \"postgres\"\n\
    \    action = \"keep\"\n  }\n  rule {\n    source_labels = [\"__meta_kubernetes_pod_label_app\"\
    ]\n    regex = \"database\"\n    action = \"keep\"\n  }\n}\n\nlocal.file_match\
    \ \"postgres_logs\" {\n  path_targets = discovery.relabel.postgres_logs.output\n\
    }\n\nloki.source.file \"postgres_logs\" {\n  targets    = local.file_match.postgres_logs.targets\n\
    \  forward_to = [loki.process.postgres_logs.receiver]\n}\n\nloki.process \"postgres_logs\"\
    \ {\n  stage.cri {}\n  stage.static_labels {\n    values = {\n      job = \"integrations/postgres_exporter\"\
    ,\n      instance = \"animaldb\",\n    }\n  }\n  forward_to = [loki.write.grafana_cloud_loki.receiver]\n\
    }"
grafana-agent:
  enabled: false
grafana-agent-logs:
  enabled: false
opentelemetry-collector:
  enabled: true
opentelemetry-collector-logs:
  enabled: true
