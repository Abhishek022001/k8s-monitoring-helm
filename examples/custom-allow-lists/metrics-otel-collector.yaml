extensions:
  # The health_check extension is mandatory.
  # Without the health_check extension the collector will fail the readiness and liveliness probes.
  # The health_check extension can be modified, but should never be removed.
  health_check: {}
receivers:
  prometheus/grafanak8smon:
    config:
      scrape_configs:          
      - job_name: integrations/kubernetes/otel-collector
        scrape_interval: 60s
        static_configs:
        - targets:
          - ${env:MY_POD_IP}:8888
        relabel_configs:
        metric_relabel_configs:
                
      - job_name: integrations/kubernetes/kubelet
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc.cluster.local:443
          - source_labels: ["__meta_kubernetes_node_name"]
            regex: "(.+)"
            replacement: "/api/v1/nodes/$${1}/proxy/metrics"
            target_label: "__metrics_path__"
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: false
          server_name: kubernetes
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|kubelet_node_name|kubernetes_build_info"
                
      - job_name: integrations/kubernetes/cadvisor
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc.cluster.local:443
          - source_labels: ["__meta_kubernetes_node_name"]
            regex: "(.+)"
            replacement: "/api/v1/nodes/$${1}/proxy/metrics/cadvisor"
            target_label: "__metrics_path__"
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: false
          server_name: kubernetes
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|container_memory_cache|container_memory_rss|container_memory_swap"
                
      - job_name: integrations/kubernetes/kube-state-metrics
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            regex: "k8smon"
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_instance"]
          - action: keep
            regex: kube-state-metrics
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
          - action: keep
            regex: "kube-state-metrics"
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
          - action: keep
            regex: "http"
            source_labels: ["__meta_kubernetes_service_port_name"]
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|*"
                
      - job_name: integrations/node_exporter
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            source_labels: ["__meta_kubernetes_pod_label_app_kubernetes_io_instance"]
            regex: "k8smon"
          - action: keep
            source_labels: ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
            regex: "prometheus-node-exporter.*"
          - source_labels: ["__meta_kubernetes_pod_node_name"]
            target_label: "instance"
          - action: replace
            source_labels: ["__meta_kubernetes_namespace"]
            target_label: namespace
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|node_*"
                
      - job_name: integrations/kubernetes/opencost
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_instance"]
            regex: "k8smon"
          - action: keep
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
            regex: "opencost"
          - action: keep
            source_labels: ["__meta_kubernetes_service_port_name"]
            regex: "http"
        metric_relabel_configs:
      
processors:
  batch: {}
exporters:      
  prometheusremotewrite:
    external_labels:
      cluster: custom-allow-lists-test
    endpoint: https://prometheus.example.com/api/prom/push
    headers:
      Authorization: Basic MTIzNDU6SXQncyBhIHNlY3JldCB0byBldmVyeW9uZQ==
  
service:
  extensions:
    - health_check
  pipelines:
    metrics/grafanak8smon:
      receivers: [ prometheus/grafanak8smon ]
      processors: [ batch ]
      exporters: [ prometheusremotewrite ]
  telemetry:
    logs:
      level: 'debug'
