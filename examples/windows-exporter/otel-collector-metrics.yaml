extensions:
  # The health_check extension is mandatory.
  # Without the health_check extension the collector will fail the readiness and liveliness probes.
  # The health_check extension can be modified, but should never be removed.
  health_check: {}
processors:
  batch: {}
receivers:
  prometheus:
    config:
      scrape_configs:          
      - job_name: integrations/kubernetes/kubelet
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc.cluster.local:443
          - source_labels: ["__meta_kubernetes_node_name"]
            regex: "(.+)"
            replacement: "/api/v1/nodes/$${1}/proxy/metrics"
            target_label: "__metrics_path__"
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
          server_name: kubernetes
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|container_cpu_usage_seconds_total|kubelet_certificate_manager_client_expiration_renew_errors|kubelet_certificate_manager_client_ttl_seconds|kubelet_certificate_manager_server_ttl_seconds|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_config_error|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_containers|kubelet_running_pod_count|kubelet_running_pods|kubelet_runtime_operations_errors_total|kubelet_runtime_operations_total|kubelet_server_expiration_renew_errors|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubelet_volume_stats_inodes_used|kubernetes_build_info|namespace_workload_pod|rest_client_requests_total|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes"
                
      - job_name: integrations/kubernetes/cadvisor
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc.cluster.local:443
          - source_labels: ["__meta_kubernetes_node_name"]
            regex: "(.+)"
            replacement: "/api/v1/nodes/$${1}/proxy/metrics/cadvisor"
            target_label: "__metrics_path__"
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
          server_name: kubernetes
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_reads_total|container_fs_writes_bytes_total|container_fs_writes_total|container_memory_cache|container_memory_rss|container_memory_swap|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total|machine_memory_bytes"
                
      - job_name: integrations/kubernetes/kube-state-metrics
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            regex: "k8smon"
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_instance"]
          - action: keep
            regex: kube-state-metrics
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
          - action: keep
            regex: "kube-state-metrics"
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
          - action: keep
            regex: "http"
            source_labels: ["__meta_kubernetes_service_port_name"]
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|kube_daemonset.*|kube_deployment_metadata_generation|kube_deployment_spec_replicas|kube_deployment_status_observed_generation|kube_deployment_status_replicas_available|kube_deployment_status_replicas_updated|kube_horizontalpodautoscaler_spec_max_replicas|kube_horizontalpodautoscaler_spec_min_replicas|kube_horizontalpodautoscaler_status_current_replicas|kube_horizontalpodautoscaler_status_desired_replicas|kube_job.*|kube_namespace_status_phase|kube_namespace_status_phase|kube_node.*|kube_persistentvolumeclaim_resource_requests_storage_bytes|kube_pod_container_info|kube_pod_container_resource_limits|kube_pod_container_resource_requests|kube_pod_container_status_restarts_total|kube_pod_container_status_waiting_reason|kube_pod_container_status_waiting_reason|kube_pod_info|kube_pod_owner|kube_pod_start_time|kube_pod_status_phase|kube_pod_status_phase|kube_pod_status_reason|kube_replicaset.*|kube_resourcequota|kube_statefulset.*"
                
      - job_name: integrations/node_exporter
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            source_labels: ["__meta_kubernetes_pod_label_app_kubernetes_io_instance"]
            regex: "k8smon"
          - action: keep
            source_labels: ["__meta_kubernetes_pod_label_app_kubernetes_io_name"]
            regex: "prometheus-node-exporter.*"
          - source_labels: ["__meta_kubernetes_pod_node_name"]
            target_label: "instance"
          - action: replace
            source_labels: ["__meta_kubernetes_namespace"]
            target_label: namespace
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|node_cpu.*|node_exporter_build_info|node_filesystem.*|node_memory.*|process_cpu_seconds_total|process_resident_memory_bytes"
                
      - job_name: integrations/kubernetes/opencost
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_instance"]
            regex: "k8smon"
          - action: keep
            source_labels: ["__meta_kubernetes_service_label_app_kubernetes_io_name"]
            regex: "opencost"
          - action: keep
            source_labels: ["__meta_kubernetes_service_port_name"]
            regex: "http"
        metric_relabel_configs:
          - action: keep
            source_labels: ["__name__"]
            regex: "up|container_cpu_allocation|container_gpu_allocation|container_memory_allocation_bytes|deployment_match_labels|kubecost_cluster_info|kubecost_cluster_management_cost|kubecost_cluster_memory_working_set_bytes|kubecost_http_requests_total|kubecost_http_response_size_bytes|kubecost_http_response_time_seconds|kubecost_load_balancer_cost|kubecost_network_internet_egress_cost|kubecost_network_region_egress_cost|kubecost_network_zone_egress_cost|kubecost_node_is_spot|node_cpu_hourly_cost|node_gpu_count|node_gpu_hourly_cost|node_ram_hourly_cost|node_total_hourly_cost|opencost_build_info|pod_pvc_allocation|pv_hourly_cost|service_selector_labels|statefulSet_match_labels"
      
exporters:      
  prometheusremotewrite:
    external_labels:
      cluster: default-values-test
    endpoint: https://prometheus.example.com/api/prom/push
    headers:
      Authorization: Basic MTIzNDU6SXQncyBhIHNlY3JldCB0byBldmVyeW9uZQ==
  
service:
  extensions:
    - health_check
  pipelines:
    metrics/prod:
      receivers: [ prometheus ]
      processors: [ batch ]
      exporters: [ prometheusremotewrite ]
  telemetry:
    logs:
      level: 'debug'
