# CI Workflow for OpenCost Helm chart
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check-for-doc-changes:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Regenerate docs
      run: |
        docker run --rm \
          -v "$(pwd)/charts/kubernetes-monitoring:/helm-docs" \
          -u "$(id -u)" \
          jnorwood/helm-docs
        if ! git diff --exit-code; then
          echo "Helm chart documentation is not up to date. Please run 'make generate-helm-docs' and commit changes!" >&2
          exit 1
        fi

  regenerate-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.3

      - name: Regenerate tests
        run: |
          cd tests
          make regenerate-outputs
          if [ ! -z "$(git status --porcelain)" ]; then
            echo "Helm chart tests are not up to date. Please run 'make generate-helm-tests' and commit changes!" >&2
            exit 1
          fi

  lint-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.11.2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        check-latest: true

    - name: Set up chart-testing
      uses: helm/chart-testing-action@v2.4.0

    - name: List changed charts
      id: list-changed
      run: |
        changed=$(ct list-changed --config ./operations/helm/ct.yaml)
        if [[ -n "$changed" ]]; then
          echo "changed=true" >> "{$GITHUB_OUTPUT}"
        fi

    - name: Lint charts
      run: ct lint --debug --config ./.github/configs/ct.yaml --lint-conf ./.github/configs/lintconf.yaml

# TODO: Install prometheus and loki locally, then install our chart so it's connected to those services
#    - name: Create kind cluster
#      uses: helm/kind-action@v1.5.0
#      if: steps.list-changed.outputs.changed == 'true'
#
#    - name: Test charts
#      run: ct install --config ./operations/helm/ct.yaml
