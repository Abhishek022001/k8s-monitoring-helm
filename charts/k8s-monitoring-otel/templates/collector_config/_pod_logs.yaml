{{ define "otelcol.config.receiver_name.pod_logs" }}filelog/podLogs{{ end }}
{{ define "otelcol.config.receiver.pod_logs" }}
{{ include "otelcol.config.receiver_name.pod_logs" . }}:
  include:
    - /var/log/pods/*/*/*.log
  start_at: beginning
  include_file_path: true
  include_file_name: false
  operators:
    # Find out which format is used by kubernetes
    - type: router
      id: get-format
      routes:
        - output: parser-docker
          expr: 'body matches "^\\{"'
        - output: parser-crio
          expr: 'body matches "^[^ Z]+ "'
        - output: parser-containerd
          expr: 'body matches "^[^ Z]+Z"'
    # Parse CRI-O format
    - type: regex_parser
      id: parser-crio
      regex: '^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
      output: extract_metadata_from_filepath
      timestamp:
        parse_from: attributes.time
        layout_type: gotime
        layout: '2006-01-02T15:04:05.999999999Z07:00'
    # Parse CRI-Containerd format
    - type: regex_parser
      id: parser-containerd
      regex: '^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$'
      output: extract_metadata_from_filepath
      timestamp:
        parse_from: attributes.time
        layout: '%Y-%m-%dT%H:%M:%S.%LZ'
    # Parse Docker format
    - type: json_parser
      id: parser-docker
      output: extract_metadata_from_filepath
      timestamp:
        parse_from: attributes.time
        layout: '%Y-%m-%dT%H:%M:%S.%LZ'
    - type: move
      from: attributes.log
      to: body
    # Extract metadata from file path
    - type: regex_parser
      id: extract_metadata_from_filepath
      # /var/log/pods/kube-system_kube-controller-manager-kind-control-plane_bfa312e5a38151347a1e34c98557f81a/kube-controller-manager/0.log
                      <namespace>_<pod_name>                                _<uid>                           /<container>            /
      regex: '^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$'
      parse_from: attributes["log.file.path"]
      cache:
        size: 128 # default maximum amount of Pods per Node is 110
    # Rename attributes
    - type: move
      from: attributes["log.file.path"]
      to: resource["filename"]
    - type: move
      from: attributes.container_name
      to: resource["container"]
    - type: move
      from: attributes.pod_name
      to: resource["pod"]
    - type: move
      from: attributes.namespace
      to: resource["namespace"]
    - type: add
      field: resource["cluster"]
      value: "default-values-test"
{{ end }}

{{ define "otelcol.config.resource_name.pod_logs" }}resource/podLogs{{ end }}
{{ define "otelcol.config.resource.pod_logs" }}
{{ include "otelcol.config.resource_name.pod_logs" . }}:
  attributes:
    - action: insert
      key: loki.format
      value: raw
    - action: insert
      key: loki.resource.labels
      value: filename, container, pod, namespace, cluster, job
{{ end }}

{{ define "otelcol.config.transform_name.pod_logs" }}transform/podLogs{{ end }}
{{ define "otelcol.config.transform.pod_logs" }}
{{ include "otelcol.config.transform_name.pod_logs" . }}:
  error_mode: ignore
  log_statements:
    - context: resource
      statements:
        - set(attributes["job"], Concat([attributes["namespace"], attributes["pod"]], "/"))
{{ end }}
